buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.jruyi.gradle:thrift-gradle-plugin:0.2.0'
    }
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.0.2'
        compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.0.2'
        compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.0.2'
        compile group: 'commons-configuration', name:'commons-configuration', version: '1.9'
        testCompile group: 'junit', name: 'junit', version: '4.+'
        testCompile "org.mockito:mockito-core:1.+"
    }

    group = 'at.ac.tuwien.aic.ws14.group2.onion'
    version = '0.1.0'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

project(':node:common') {
    dependencies {
		compile project(':shared')
        compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.51'
    }
}

project(':node:chain') {
    apply plugin: 'application'

    mainClassName = group + '.node.chain.ChainNodeStarter'

    dependencies {
        compile project(':node:common')
        compile project(':directory-api')
    }
}

project(':node:local') {
    apply plugin: 'application'

    mainClassName = group + '.node.local.LocalNodeStarter'

    dependencies {
        compile project(':node:common')
        compile project(':directory-api')
    }
}

project(':directory') {
    apply plugin: 'application'

    mainClassName = group + '.directory.DirectoryStarter'

    dependencies {
        compile project(':directory-api')
        compile project(':node:common')
        compile group: 'com.google.guava', name: 'guava', version: '10.0'
    }
}

project(':directory-api') {
    apply plugin: 'org.jruyi.thrift'

    dependencies {
		compile project(':shared')
        compile group: 'org.apache.thrift', name: 'libthrift', version: '0.9.1'
    }

    idea.module {
        excludeDirs -= file(buildDir)
        buildDir.listFiles({ d, f -> f != 'generated-sources' } as FilenameFilter).each { excludeDirs += it }
    }

    compileThrift {
        recurse true
        generator 'java', 'private-members'
    }
}

project(':target') {
    apply plugin: 'application'
    apply plugin: 'war'

    mainClassName = group + '.target.Main'

    dependencies {
        compile group: 'com.sun.jersey', name: 'jersey-bundle', version: '1.11'
        compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-jetty-http', version: '2.7'
        compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.2.0.RC0'
        compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.2.0.RC0'
        testCompile group: 'com.sun.jersey.jersey-test-framework', name: 'jersey-test-framework-inmemory', version:
                '1.11'
    }
}
